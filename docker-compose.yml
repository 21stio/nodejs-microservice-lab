version: '2'
services:
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - 9411:9411
  base:
    build: .
    image: mircoservice-lab_base:latest
    environment:
      - APPLICATION_PORT=9000
      - DATABASE_CLIENT=pg
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_DATABASE=database
      - DATABASE_USERNAME=username
      - DATABASE_PASSWORD=password
      - HTTP_LOGGER_ENDPOINT=http://zipkin:9411/api/v1/spans
    volumes:
      - .:/opt/microservice-lab
  fetchme:
    extends: base
    command: gulp pm2_up
    environment:
      - APPLICATION_PORT=9001
      - SERVICE_NAME=RECEIVER
    ports:
      - 9001:9001
    links:
      - postgres:postgres
      - zipkin:zipkin
  watch:
    extends: base
    command: gulp pm2_up
    environment:
      - FETCH_URL=http://fetchme:9001/api/pets/1
      - SERVICE_NAME=CALLER
    ports:
      - 9000:9000
    links:
      - postgres:postgres
      - zipkin:zipkin
      - fetchme:fetchme
  test:
    extends: base
    command: gulp dredd_up
    links:
      - postgres:postgres
  debug:
    extends: base
    command: node --debug=7000 ./dist/index.js
    environment:
      - APPLICATION_PORT=8000
    ports:
      - 8000:8000
      - 7000:7000
    links:
      - postgres:postgres
  codegen:
    build:
      context: .
      dockerfile: SwaggerCodegen.Dockerfile
    image: mircoservice-lab_swagger-codegen:latest
    command: java -jar swagger-codegen-cli.jar generate -i /opt/microservice-lab/swagger.yml -l typescript-fetch -o /opt/microservice-lab/sdk
    volumes:
      - .:/opt/microservice-lab